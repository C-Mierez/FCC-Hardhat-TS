// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BoughtItem extends ethereum.Event {
  get params(): BoughtItem__Params {
    return new BoughtItem__Params(this);
  }
}

export class BoughtItem__Params {
  _event: BoughtItem;

  constructor(event: BoughtItem) {
    this._event = event;
  }

  get buyer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get seller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get nft(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ClaimedProceeds extends ethereum.Event {
  get params(): ClaimedProceeds__Params {
    return new ClaimedProceeds__Params(this);
  }
}

export class ClaimedProceeds__Params {
  _event: ClaimedProceeds;

  constructor(event: ClaimedProceeds) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ListedItem extends ethereum.Event {
  get params(): ListedItem__Params {
    return new ListedItem__Params(this);
  }
}

export class ListedItem__Params {
  _event: ListedItem;

  constructor(event: ListedItem) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nft(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UpdatedItem extends ethereum.Event {
  get params(): UpdatedItem__Params {
    return new UpdatedItem__Params(this);
  }
}

export class UpdatedItem__Params {
  _event: UpdatedItem;

  constructor(event: UpdatedItem) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nft(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawnItem extends ethereum.Event {
  get params(): WithdrawnItem__Params {
    return new WithdrawnItem__Params(this);
  }
}

export class WithdrawnItem__Params {
  _event: WithdrawnItem;

  constructor(event: WithdrawnItem) {
    this._event = event;
  }

  get nft(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Market__getListingResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get price(): BigInt {
    return this[1].toBigInt();
  }
}

export class Market extends ethereum.SmartContract {
  static bind(address: Address): Market {
    return new Market("Market", address);
  }

  getListing(
    _nft: Address,
    _tokenId: BigInt
  ): Market__getListingResultValue0Struct {
    let result = super.call(
      "getListing",
      "getListing(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(_nft),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return changetype<Market__getListingResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getListing(
    _nft: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<Market__getListingResultValue0Struct> {
    let result = super.tryCall(
      "getListing",
      "getListing(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(_nft),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Market__getListingResultValue0Struct>(value[0].toTuple())
    );
  }

  getOwedProceeds(_seller: Address): BigInt {
    let result = super.call(
      "getOwedProceeds",
      "getOwedProceeds(address):(uint256)",
      [ethereum.Value.fromAddress(_seller)]
    );

    return result[0].toBigInt();
  }

  try_getOwedProceeds(_seller: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOwedProceeds",
      "getOwedProceeds(address):(uint256)",
      [ethereum.Value.fromAddress(_seller)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class BuyItemCall extends ethereum.Call {
  get inputs(): BuyItemCall__Inputs {
    return new BuyItemCall__Inputs(this);
  }

  get outputs(): BuyItemCall__Outputs {
    return new BuyItemCall__Outputs(this);
  }
}

export class BuyItemCall__Inputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyItemCall__Outputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }
}

export class ClaimProceedsCall extends ethereum.Call {
  get inputs(): ClaimProceedsCall__Inputs {
    return new ClaimProceedsCall__Inputs(this);
  }

  get outputs(): ClaimProceedsCall__Outputs {
    return new ClaimProceedsCall__Outputs(this);
  }
}

export class ClaimProceedsCall__Inputs {
  _call: ClaimProceedsCall;

  constructor(call: ClaimProceedsCall) {
    this._call = call;
  }
}

export class ClaimProceedsCall__Outputs {
  _call: ClaimProceedsCall;

  constructor(call: ClaimProceedsCall) {
    this._call = call;
  }
}

export class ListItemCall extends ethereum.Call {
  get inputs(): ListItemCall__Inputs {
    return new ListItemCall__Inputs(this);
  }

  get outputs(): ListItemCall__Outputs {
    return new ListItemCall__Outputs(this);
  }
}

export class ListItemCall__Inputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListItemCall__Outputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }
}

export class UpdateItemCall extends ethereum.Call {
  get inputs(): UpdateItemCall__Inputs {
    return new UpdateItemCall__Inputs(this);
  }

  get outputs(): UpdateItemCall__Outputs {
    return new UpdateItemCall__Outputs(this);
  }
}

export class UpdateItemCall__Inputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateItemCall__Outputs {
  _call: UpdateItemCall;

  constructor(call: UpdateItemCall) {
    this._call = call;
  }
}

export class WithdrawItemCall extends ethereum.Call {
  get inputs(): WithdrawItemCall__Inputs {
    return new WithdrawItemCall__Inputs(this);
  }

  get outputs(): WithdrawItemCall__Outputs {
    return new WithdrawItemCall__Outputs(this);
  }
}

export class WithdrawItemCall__Inputs {
  _call: WithdrawItemCall;

  constructor(call: WithdrawItemCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawItemCall__Outputs {
  _call: WithdrawItemCall;

  constructor(call: WithdrawItemCall) {
    this._call = call;
  }
}
